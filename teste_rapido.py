#!/usr/bin/env python3
"""
Teste r√°pido para verificar se OpenAI est√° funcionando
"""

import requests
import json

def testar_openai():
    url = "http://localhost:5000/process"
    
    email_teste = """Assunto: Mudan√ßa de Requisito no Projeto X - Prazo Imediato

Caro Desenvolvedor,

A diretoria aprovou uma mudan√ßa no requisito de c√°lculo de juros do sistema. A nova regra deve ser implementada at√© o final do dia de hoje para que o pr√≥ximo ciclo de processamento funcione corretamente.

O documento detalhando a altera√ß√£o est√° no link do SharePoint. Confirme que entendeu a urg√™ncia.

Obrigado,
Ger√™ncia de Projetos"""
    
    print("üß™ TESTE R√ÅPIDO - VERIFICANDO OPENAI")
    print("=" * 50)
    
    try:
        response = requests.post(url, data={"email_text": email_teste}, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Status: {response.status_code}")
            print(f"üìß Categoria: {result.get('categoria')}")
            print(f"üìù Motivo: {result.get('motivo')}")
            print(f"üí¨ Resposta: {result.get('resposta_sugerida')}")
            
            # Verificar se √© contextual
            resposta = result.get('resposta_sugerida', '').lower()
            contextual_words = ['mudan√ßa', 'requisito', 'sharepoint', 'urg√™ncia', 'hoje', 'prazo']
            
            found_context = [word for word in contextual_words if word in resposta]
            
            print(f"\nüîç An√°lise Contextual:")
            print(f"Palavras contextuais encontradas: {found_context}")
            
            if len(found_context) >= 2:
                print("‚úÖ RESPOSTA CONTEXTUAL - OpenAI funcionando!")
            else:
                print("‚ùå Resposta gen√©rica - OpenAI n√£o est√° sendo usado")
                
        else:
            print(f"‚ùå Erro HTTP: {response.status_code}")
            print(f"Resposta: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")

if __name__ == "__main__":
    testar_openai()
